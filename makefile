# don't check for a file "clean"
.PHONY = clean

# compiler flags
CXXFLAGS = -Wall

# if WARNINGS is not initialized -> WARNINGS = 0
WARNINGS ?= 0

ifeq (${WARNINGS}, 1)
	CXXFLAGS += -pedantic -Wall -Wextra -Wcast-align -Wcast-qual -Wctor-dtor-privacy -Wdisabled-optimization -Wformat=2 -Winit-self -Wlogical-op -Wmissing-declarations -Wmissing-include-dirs -Wnoexcept -Wold-style-cast -Woverloaded-virtual -Wredundant-decls -Wshadow -Wsign-conversion -Wsign-promo -Wstrict-null-sentinel -Wstrict-overflow=5 -Wswitch-default -Wundef -Wno-unused
endif

# if DEBUG is not initialized -> DEBUG = 1
DEBUG ?= 1

# if DEBUG = 1 -> add "-g"(keep debug info)
# 		else -> add "-O3"(optimize the executable)
ifeq (${DEBUG}, 1)
	CXXFLAGS += -g
else
	CXXFLAGS += -O3
endif

GXX = g++ ${CXXFLAGS}

# the name of the executable
EXECUTABLE = snake

# object files to keep track of
OBJECTS = main.o game.o ui.o player.o field.o
LIBRARIES = -lncurses

# the directory to keep autogenerated makefiles that track objects' dependencies
DEPDIR = .makefile.d
$(shell mkdir -p ${DEPDIR} >/dev/null)
DEPFLAGS = -MT $@ -MMD -MP -MF ${DEPDIR}/$*.Td

# compile the executable using the object files
${EXECUTABLE}: ${OBJECTS}
	${GXX} -o $@ $^ ${LIBRARIES}

# disable the built-in rule for building .o files
%.o: %.cpp
# rebuild an .o file if the .cpp or the auto-generated file is updated
# for each cpp file compile an .o file and autogenerate a makefile that keeps track of its dependencies
%.o: %.cpp ${DEPDIR}/%.d
	${GXX} ${DEPFLAGS} ${CXXFLAGS} ${CPPFLAGS} -c $<
	@mv -f ${DEPDIR}/$*.Td ${DEPDIR}/$*.d && touch $@

# create an empty pattern, so that make won't fail if the autogenerated makefiles are deleted
${DEPDIR}/%.d: ;

# don't delete auto-generated makefiles
.PRECIOUS: ${DEPDIR}/%.d

# include the autogenerated makefiles
include $(wildcard $(patsubst %,${DEPDIR}/%.d,$(basename ${OBJECTS})))

clean:
	rm ${EXECUTABLE} ${OBJECTS} ${DEPDIR}/*.d
